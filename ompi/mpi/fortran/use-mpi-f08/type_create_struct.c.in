/*
 * Copyright (c) 2004-2005 The Trustees of Indiana University and Indiana
 *                         University Research and Technology
 *                         Corporation.  All rights reserved.
 * Copyright (c) 2004-2020 The University of Tennessee and The University
 *                         of Tennessee Research Foundation.  All rights
 *                         reserved.
 * Copyright (c) 2004-2005 High Performance Computing Center Stuttgart,
 *                         University of Stuttgart.  All rights reserved.
 * Copyright (c) 2004-2005 The Regents of the University of California.
 *                         All rights reserved.
 * Copyright (c) 2011-2012 Cisco Systems, Inc.  All rights reserved.
 * Copyright (c) 2015      Research Organization for Information Science
 *                         and Technology (RIST). All rights reserved.
 * $COPYRIGHT$
 *
 * Additional copyrights may follow
 *
 * $HEADER$
 */


PROTOTYPE VOID  type_create_struct(COUNT count,
   			           COUNT_ARRAY array_of_block_lengths,
			           AINT_COUNT_ARRAY array_of_displacements,
   			           DATATYPE_ARRAY array_of_types, 
			           DATATYPE_OUT newtype)
{
    MPI_Datatype c_new;
    MPI_Datatype *c_type_old_array;
    int i, c_ierr;
    OMPI_ARRAY_NAME_DECL(array_of_block_lengths);

    c_type_old_array = (MPI_Datatype *) malloc(*count * sizeof(MPI_Datatype));
    if (NULL == c_type_old_array) {
        c_ierr = OMPI_ERRHANDLER_NOHANDLE_INVOKE(MPI_ERR_NO_MEM,
                                        FUNC_NAME);
        if (NULL != ierr) *ierr = OMPI_INT_2_FINT(c_ierr);
        return;
    }

    for (i = 0; i < *count; i++) {
        c_type_old_array[i] = PMPI_Type_f2c(array_of_types[i]);
    }

    OMPI_ARRAY_FINT_2_INT(array_of_block_lengths, *count);

    c_ierr = @INNER_CALL@(OMPI_FINT_2_INT(*count),
			   OMPI_ARRAY_NAME_CONVERT(array_of_block_lengths),
                           array_of_displacements, c_type_old_array, &c_new);
    if (NULL != ierr) *ierr = OMPI_INT_2_FINT(c_ierr);

    OMPI_ARRAY_FINT_2_INT_CLEANUP(array_of_block_lengths);

    if (MPI_SUCCESS == c_ierr) {
        *newtype = PMPI_Type_c2f(c_new);
    }

    free(c_type_old_array);
}
